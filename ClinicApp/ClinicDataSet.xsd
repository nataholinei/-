<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ClinicDataSet" targetNamespace="http://tempuri.org/ClinicDataSet.xsd" xmlns:mstns="http://tempuri.org/ClinicDataSet.xsd" xmlns="http://tempuri.org/ClinicDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ClinicConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ClinicConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ClinicApp.Properties.Settings.GlobalReference.Default.ClinicConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BadDrugsTableAdapter" GeneratorDataComponentClassName="BadDrugsTableAdapter" Name="BadDrugs" UserDataComponentName="BadDrugsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.BadDrugs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[BadDrugs] WHERE (([idBadDrugs] = @Original_idBadDrugs) AND ([idPatient] = @Original_idPatient) AND ([idIngredient] = @Original_idIngredient))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idBadDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idBadDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[BadDrugs] ([idPatient], [idIngredient]) VALUES (@idPatient, @idIngredient);
SELECT idBadDrugs, idPatient, idIngredient FROM Clinic.BadDrugs WHERE (idBadDrugs = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idBadDrugs, idPatient, idIngredient FROM Clinic.BadDrugs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[BadDrugs] SET [idPatient] = @idPatient, [idIngredient] = @idIngredient WHERE (([idBadDrugs] = @Original_idBadDrugs) AND ([idPatient] = @Original_idPatient) AND ([idIngredient] = @Original_idIngredient));
SELECT idBadDrugs, idPatient, idIngredient FROM Clinic.BadDrugs WHERE (idBadDrugs = @idBadDrugs)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idBadDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idBadDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idBadDrugs" ColumnName="idBadDrugs" DataSourceName="Clinic.Clinic.BadDrugs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idBadDrugs" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idBadDrugs" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idBadDrugs" DataSetColumn="idBadDrugs" />
              <Mapping SourceColumn="idPatient" DataSetColumn="idPatient" />
              <Mapping SourceColumn="idIngredient" DataSetColumn="idIngredient" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DiagnosesTableAdapter" GeneratorDataComponentClassName="DiagnosesTableAdapter" Name="Diagnoses" UserDataComponentName="DiagnosesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Diagnoses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Diagnoses] WHERE (([idDiagnosis] = @Original_idDiagnosis) AND ([Description] = @Original_Description))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Diagnoses] ([Description]) VALUES (@Description);
SELECT idDiagnosis, Description FROM Clinic.Diagnoses WHERE (idDiagnosis = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idDiagnosis, Description FROM Clinic.Diagnoses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Diagnoses] SET [Description] = @Description WHERE (([idDiagnosis] = @Original_idDiagnosis) AND ([Description] = @Original_Description));
SELECT idDiagnosis, Description FROM Clinic.Diagnoses WHERE (idDiagnosis = @idDiagnosis)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idDiagnosis" ColumnName="idDiagnosis" DataSourceName="Clinic.Clinic.Diagnoses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idDiagnosis" DataSetColumn="idDiagnosis" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DoctorsTableAdapter" GeneratorDataComponentClassName="DoctorsTableAdapter" Name="Doctors" UserDataComponentName="DoctorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Doctors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Doctors] WHERE (([idDoctor] = @Original_idDoctor) AND ([idPerson] = @Original_idPerson) AND ([idSpecialization] = @Original_idSpecialization))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Doctors] ([idPerson], [idSpecialization]) VALUES (@idPerson, @idSpecialization);
SELECT idDoctor, idPerson, idSpecialization FROM Clinic.Doctors WHERE (idDoctor = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idDoctor, idPerson, idSpecialization FROM Clinic.Doctors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Doctors] SET [idPerson] = @idPerson, [idSpecialization] = @idSpecialization WHERE (([idDoctor] = @Original_idDoctor) AND ([idPerson] = @Original_idPerson) AND ([idSpecialization] = @Original_idSpecialization));
SELECT idDoctor, idPerson, idSpecialization FROM Clinic.Doctors WHERE (idDoctor = @idDoctor)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idDoctor" ColumnName="idDoctor" DataSourceName="Clinic.Clinic.Doctors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idDoctor" DataSetColumn="idDoctor" />
              <Mapping SourceColumn="idPerson" DataSetColumn="idPerson" />
              <Mapping SourceColumn="idSpecialization" DataSetColumn="idSpecialization" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Clinic.Doctors.idDoctor, Clinic.Persons.LastName, [FirstName], [MiddleName], Clinic.Specialization.Name
FROM   Clinic.Doctors INNER JOIN
             Clinic.Persons ON Clinic.Doctors.idPerson = Clinic.Persons.idPerson INNER JOIN
             Clinic.Specialization ON Clinic.Doctors.idSpecialization = Clinic.Specialization.idSpecialization</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DrugsTableAdapter" GeneratorDataComponentClassName="DrugsTableAdapter" Name="Drugs" UserDataComponentName="DrugsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Drugs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Drugs] WHERE (([idDrugs] = @Original_idDrugs) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Drugs] ([Name]) VALUES (@Name);
SELECT idDrugs, Name FROM Clinic.Drugs WHERE (idDrugs = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idDrugs, Name FROM Clinic.Drugs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Drugs] SET [Name] = @Name WHERE (([idDrugs] = @Original_idDrugs) AND ([Name] = @Original_Name));
SELECT idDrugs, Name FROM Clinic.Drugs WHERE (idDrugs = @idDrugs)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idDrugs" ColumnName="idDrugs" DataSourceName="Clinic.Clinic.Drugs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idDrugs" DataSetColumn="idDrugs" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DrugsComponentsTableAdapter" GeneratorDataComponentClassName="DrugsComponentsTableAdapter" Name="DrugsComponents" UserDataComponentName="DrugsComponentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.DrugsComponents" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[DrugsComponents] WHERE (([idDrugsComponents] = @Original_idDrugsComponents) AND ([idDrugs] = @Original_idDrugs) AND ([idIngredient] = @Original_idIngredient))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugsComponents" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugsComponents" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[DrugsComponents] ([idDrugs], [idIngredient]) VALUES (@idDrugs, @idIngredient);
SELECT idDrugsComponents, idDrugs, idIngredient FROM Clinic.DrugsComponents WHERE (idDrugsComponents = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idDrugsComponents, idDrugs, idIngredient FROM Clinic.DrugsComponents</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[DrugsComponents] SET [idDrugs] = @idDrugs, [idIngredient] = @idIngredient WHERE (([idDrugsComponents] = @Original_idDrugsComponents) AND ([idDrugs] = @Original_idDrugs) AND ([idIngredient] = @Original_idIngredient));
SELECT idDrugsComponents, idDrugs, idIngredient FROM Clinic.DrugsComponents WHERE (idDrugsComponents = @idDrugsComponents)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugsComponents" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugsComponents" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idDrugsComponents" ColumnName="idDrugsComponents" DataSourceName="Clinic.Clinic.DrugsComponents" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idDrugsComponents" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idDrugsComponents" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idDrugsComponents" DataSetColumn="idDrugsComponents" />
              <Mapping SourceColumn="idDrugs" DataSetColumn="idDrugs" />
              <Mapping SourceColumn="idIngredient" DataSetColumn="idIngredient" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DrugsListTableAdapter" GeneratorDataComponentClassName="DrugsListTableAdapter" Name="DrugsList" UserDataComponentName="DrugsListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.DrugsList" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[DrugsList] WHERE (([idDrugsList] = @Original_idDrugsList) AND ([idDiagnosis] = @Original_idDiagnosis) AND ([idDrugs] = @Original_idDrugs))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugsList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugsList" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[DrugsList] ([idDiagnosis], [idDrugs]) VALUES (@idDiagnosis, @idDrugs);
SELECT idDrugsList, idDiagnosis, idDrugs FROM Clinic.DrugsList WHERE (idDrugsList = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idDrugsList, idDiagnosis, idDrugs FROM Clinic.DrugsList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[DrugsList] SET [idDiagnosis] = @idDiagnosis, [idDrugs] = @idDrugs WHERE (([idDrugsList] = @Original_idDrugsList) AND ([idDiagnosis] = @Original_idDiagnosis) AND ([idDrugs] = @Original_idDrugs));
SELECT idDrugsList, idDiagnosis, idDrugs FROM Clinic.DrugsList WHERE (idDrugsList = @idDrugsList)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugsList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugsList" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDrugs" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDrugs" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idDrugsList" ColumnName="idDrugsList" DataSourceName="Clinic.Clinic.DrugsList" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idDrugsList" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idDrugsList" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idDrugsList" DataSetColumn="idDrugsList" />
              <Mapping SourceColumn="idDiagnosis" DataSetColumn="idDiagnosis" />
              <Mapping SourceColumn="idDrugs" DataSetColumn="idDrugs" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HistoryTableAdapter" GeneratorDataComponentClassName="HistoryTableAdapter" Name="History" UserDataComponentName="HistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.History" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[History] WHERE (([idHisrory] = @Original_idHisrory) AND ([idPatient] = @Original_idPatient) AND ([idDiagnosis] = @Original_idDiagnosis) AND ([idDoctor] = @Original_idDoctor) AND ([DateStart] = @Original_DateStart) AND ((@IsNull_DateEnd = 1 AND [DateEnd] IS NULL) OR ([DateEnd] = @Original_DateEnd)) AND ((@IsNull_Rating = 1 AND [Rating] IS NULL) OR ([Rating] = @Original_Rating)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idHisrory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idHisrory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DateStart" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateStart" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DateEnd" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateEnd" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DateEnd" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateEnd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[History] ([idPatient], [idDiagnosis], [idDoctor], [DateStart], [DateEnd], [Rating]) VALUES (@idPatient, @idDiagnosis, @idDoctor, @DateStart, @DateEnd, @Rating);
SELECT idHisrory, idPatient, idDiagnosis, idDoctor, DateStart, DateEnd, Rating FROM Clinic.History WHERE (idHisrory = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateStart" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateStart" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateEnd" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateEnd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idHisrory, idPatient, idDiagnosis, idDoctor, DateStart, DateEnd, Rating FROM Clinic.History</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[History] SET [idPatient] = @idPatient, [idDiagnosis] = @idDiagnosis, [idDoctor] = @idDoctor, [DateStart] = @DateStart, [DateEnd] = @DateEnd, [Rating] = @Rating WHERE (([idHisrory] = @Original_idHisrory) AND ([idPatient] = @Original_idPatient) AND ([idDiagnosis] = @Original_idDiagnosis) AND ([idDoctor] = @Original_idDoctor) AND ([DateStart] = @Original_DateStart) AND ((@IsNull_DateEnd = 1 AND [DateEnd] IS NULL) OR ([DateEnd] = @Original_DateEnd)) AND ((@IsNull_Rating = 1 AND [Rating] IS NULL) OR ([Rating] = @Original_Rating)));
SELECT idHisrory, idPatient, idDiagnosis, idDoctor, DateStart, DateEnd, Rating FROM Clinic.History WHERE (idHisrory = @idHisrory)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateStart" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateStart" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DateEnd" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateEnd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idHisrory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idHisrory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDiagnosis" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDiagnosis" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idDoctor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idDoctor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DateStart" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateStart" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DateEnd" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateEnd" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DateEnd" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DateEnd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idHisrory" ColumnName="idHisrory" DataSourceName="Clinic.Clinic.History" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idHisrory" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idHisrory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idHisrory" DataSetColumn="idHisrory" />
              <Mapping SourceColumn="idPatient" DataSetColumn="idPatient" />
              <Mapping SourceColumn="idDiagnosis" DataSetColumn="idDiagnosis" />
              <Mapping SourceColumn="idDoctor" DataSetColumn="idDoctor" />
              <Mapping SourceColumn="DateStart" DataSetColumn="DateStart" />
              <Mapping SourceColumn="DateEnd" DataSetColumn="DateEnd" />
              <Mapping SourceColumn="Rating" DataSetColumn="Rating" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="IngredientsTableAdapter" GeneratorDataComponentClassName="IngredientsTableAdapter" Name="Ingredients" UserDataComponentName="IngredientsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Ingredients" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Ingredients] WHERE (([idIngredient] = @Original_idIngredient) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Ingredients] ([Name]) VALUES (@Name);
SELECT idIngredient, Name FROM Clinic.Ingredients WHERE (idIngredient = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idIngredient, Name FROM Clinic.Ingredients</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Ingredients] SET [Name] = @Name WHERE (([idIngredient] = @Original_idIngredient) AND ([Name] = @Original_Name));
SELECT idIngredient, Name FROM Clinic.Ingredients WHERE (idIngredient = @idIngredient)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idIngredient" ColumnName="idIngredient" DataSourceName="Clinic.Clinic.Ingredients" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idIngredient" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idIngredient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idIngredient" DataSetColumn="idIngredient" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientsTableAdapter" GeneratorDataComponentClassName="PatientsTableAdapter" Name="Patients" UserDataComponentName="PatientsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Patients" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Patients] WHERE (([idPatient] = @Original_idPatient) AND ([idPerson] = @Original_idPerson) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Patients] ([idPerson], [Description]) VALUES (@idPerson, @Description);
SELECT idPatient, idPerson, Description FROM Clinic.Patients WHERE (idPatient = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idPatient, idPerson, Description FROM Clinic.Patients</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Patients] SET [idPerson] = @idPerson, [Description] = @Description WHERE (([idPatient] = @Original_idPatient) AND ([idPerson] = @Original_idPerson) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT idPatient, idPerson, Description FROM Clinic.Patients WHERE (idPatient = @idPatient)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idPatient" ColumnName="idPatient" DataSourceName="Clinic.Clinic.Patients" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idPatient" DataSetColumn="idPatient" />
              <Mapping SourceColumn="idPerson" DataSetColumn="idPerson" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonsTableAdapter" GeneratorDataComponentClassName="PersonsTableAdapter" Name="Persons" UserDataComponentName="PersonsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Persons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Persons] WHERE (([idPerson] = @Original_idPerson) AND ([LastName] = @Original_LastName) AND ([FirstName] = @Original_FirstName) AND ([MiddleName] = @Original_MiddleName) AND ([Address] = @Original_Address))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MiddleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Persons] ([LastName], [FirstName], [MiddleName], [Address]) VALUES (@LastName, @FirstName, @MiddleName, @Address);
SELECT idPerson, LastName, FirstName, MiddleName, Address FROM Clinic.Persons WHERE (idPerson = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idPerson, LastName, FirstName, MiddleName, Address FROM Clinic.Persons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Persons] SET [LastName] = @LastName, [FirstName] = @FirstName, [MiddleName] = @MiddleName, [Address] = @Address WHERE (([idPerson] = @Original_idPerson) AND ([LastName] = @Original_LastName) AND ([FirstName] = @Original_FirstName) AND ([MiddleName] = @Original_MiddleName) AND ([Address] = @Original_Address));
SELECT idPerson, LastName, FirstName, MiddleName, Address FROM Clinic.Persons WHERE (idPerson = @idPerson)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MiddleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPerson" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MiddleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idPerson" ColumnName="idPerson" DataSourceName="Clinic.Clinic.Persons" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idPerson" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idPerson" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idPerson" DataSetColumn="idPerson" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="MiddleName" DataSetColumn="MiddleName" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpecialAccountTableAdapter" GeneratorDataComponentClassName="SpecialAccountTableAdapter" Name="SpecialAccount" UserDataComponentName="SpecialAccountTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.SpecialAccount" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[SpecialAccount] WHERE (([idSpecialAccount] = @Original_idSpecialAccount) AND ([idPatient] = @Original_idPatient))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSpecialAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[SpecialAccount] ([idPatient]) VALUES (@idPatient);
SELECT idSpecialAccount, idPatient FROM Clinic.SpecialAccount WHERE (idSpecialAccount = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idSpecialAccount, idPatient FROM Clinic.SpecialAccount</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[SpecialAccount] SET [idPatient] = @idPatient WHERE (([idSpecialAccount] = @Original_idSpecialAccount) AND ([idPatient] = @Original_idPatient));
SELECT idSpecialAccount, idPatient FROM Clinic.SpecialAccount WHERE (idSpecialAccount = @idSpecialAccount)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSpecialAccount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialAccount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idPatient" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idPatient" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idSpecialAccount" ColumnName="idSpecialAccount" DataSourceName="Clinic.Clinic.SpecialAccount" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idSpecialAccount" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idSpecialAccount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idSpecialAccount" DataSetColumn="idSpecialAccount" />
              <Mapping SourceColumn="idPatient" DataSetColumn="idPatient" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpecializationTableAdapter" GeneratorDataComponentClassName="SpecializationTableAdapter" Name="Specialization" UserDataComponentName="SpecializationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.Clinic.Specialization" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Clinic].[Specialization] WHERE (([idSpecialization] = @Original_idSpecialization) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Clinic].[Specialization] ([Name]) VALUES (@Name);
SELECT idSpecialization, Name FROM Clinic.Specialization WHERE (idSpecialization = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idSpecialization, Name FROM Clinic.Specialization</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Clinic].[Specialization] SET [Name] = @Name WHERE (([idSpecialization] = @Original_idSpecialization) AND ([Name] = @Original_Name));
SELECT idSpecialization, Name FROM Clinic.Specialization WHERE (idSpecialization = @idSpecialization)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idSpecialization" ColumnName="idSpecialization" DataSourceName="Clinic.Clinic.Specialization" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idSpecialization" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idSpecialization" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idSpecialization" DataSetColumn="idSpecialization" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ClinicDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="ClinicDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ClinicDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="BadDrugs" msprop:Generator_RowEvHandlerName="BadDrugsRowChangeEventHandler" msprop:Generator_RowDeletedName="BadDrugsRowDeleted" msprop:Generator_RowDeletingName="BadDrugsRowDeleting" msprop:Generator_RowEvArgName="BadDrugsRowChangeEvent" msprop:Generator_TablePropName="BadDrugs" msprop:Generator_RowChangedName="BadDrugsRowChanged" msprop:Generator_UserTableName="BadDrugs" msprop:Generator_RowChangingName="BadDrugsRowChanging" msprop:Generator_RowClassName="BadDrugsRow" msprop:Generator_TableClassName="BadDrugsDataTable" msprop:Generator_TableVarName="tableBadDrugs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idBadDrugs" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idBadDrugsColumn" msprop:Generator_ColumnPropNameInRow="idBadDrugs" msprop:Generator_UserColumnName="idBadDrugs" msprop:Generator_ColumnVarNameInTable="columnidBadDrugs" type="xs:int" />
              <xs:element name="idPatient" msprop:Generator_ColumnPropNameInTable="idPatientColumn" msprop:Generator_ColumnPropNameInRow="idPatient" msprop:Generator_UserColumnName="idPatient" msprop:Generator_ColumnVarNameInTable="columnidPatient" type="xs:int" />
              <xs:element name="idIngredient" msprop:Generator_ColumnPropNameInTable="idIngredientColumn" msprop:Generator_ColumnPropNameInRow="idIngredient" msprop:Generator_UserColumnName="idIngredient" msprop:Generator_ColumnVarNameInTable="columnidIngredient" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Diagnoses" msprop:Generator_RowEvHandlerName="DiagnosesRowChangeEventHandler" msprop:Generator_RowDeletedName="DiagnosesRowDeleted" msprop:Generator_RowDeletingName="DiagnosesRowDeleting" msprop:Generator_RowEvArgName="DiagnosesRowChangeEvent" msprop:Generator_TablePropName="Diagnoses" msprop:Generator_RowChangedName="DiagnosesRowChanged" msprop:Generator_UserTableName="Diagnoses" msprop:Generator_RowChangingName="DiagnosesRowChanging" msprop:Generator_RowClassName="DiagnosesRow" msprop:Generator_TableClassName="DiagnosesDataTable" msprop:Generator_TableVarName="tableDiagnoses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idDiagnosis" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idDiagnosisColumn" msprop:Generator_ColumnPropNameInRow="idDiagnosis" msprop:Generator_UserColumnName="idDiagnosis" msprop:Generator_ColumnVarNameInTable="columnidDiagnosis" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnVarNameInTable="columnDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Doctors" msprop:Generator_RowEvHandlerName="DoctorsRowChangeEventHandler" msprop:Generator_RowDeletedName="DoctorsRowDeleted" msprop:Generator_RowDeletingName="DoctorsRowDeleting" msprop:Generator_RowEvArgName="DoctorsRowChangeEvent" msprop:Generator_TablePropName="Doctors" msprop:Generator_RowChangedName="DoctorsRowChanged" msprop:Generator_UserTableName="Doctors" msprop:Generator_RowChangingName="DoctorsRowChanging" msprop:Generator_RowClassName="DoctorsRow" msprop:Generator_TableClassName="DoctorsDataTable" msprop:Generator_TableVarName="tableDoctors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idDoctor" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idDoctorColumn" msprop:Generator_ColumnPropNameInRow="idDoctor" msprop:Generator_UserColumnName="idDoctor" msprop:Generator_ColumnVarNameInTable="columnidDoctor" type="xs:int" />
              <xs:element name="idPerson" msprop:Generator_ColumnPropNameInTable="idPersonColumn" msprop:Generator_ColumnPropNameInRow="idPerson" msprop:Generator_UserColumnName="idPerson" msprop:Generator_ColumnVarNameInTable="columnidPerson" type="xs:int" />
              <xs:element name="idSpecialization" msprop:Generator_ColumnPropNameInTable="idSpecializationColumn" msprop:Generator_ColumnPropNameInRow="idSpecialization" msprop:Generator_UserColumnName="idSpecialization" msprop:Generator_ColumnVarNameInTable="columnidSpecialization" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Drugs" msprop:Generator_RowEvHandlerName="DrugsRowChangeEventHandler" msprop:Generator_RowDeletedName="DrugsRowDeleted" msprop:Generator_RowDeletingName="DrugsRowDeleting" msprop:Generator_RowEvArgName="DrugsRowChangeEvent" msprop:Generator_TablePropName="Drugs" msprop:Generator_RowChangedName="DrugsRowChanged" msprop:Generator_UserTableName="Drugs" msprop:Generator_RowChangingName="DrugsRowChanging" msprop:Generator_RowClassName="DrugsRow" msprop:Generator_TableClassName="DrugsDataTable" msprop:Generator_TableVarName="tableDrugs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idDrugs" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idDrugsColumn" msprop:Generator_ColumnPropNameInRow="idDrugs" msprop:Generator_UserColumnName="idDrugs" msprop:Generator_ColumnVarNameInTable="columnidDrugs" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnVarNameInTable="columnName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DrugsComponents" msprop:Generator_RowEvHandlerName="DrugsComponentsRowChangeEventHandler" msprop:Generator_RowDeletedName="DrugsComponentsRowDeleted" msprop:Generator_RowDeletingName="DrugsComponentsRowDeleting" msprop:Generator_RowEvArgName="DrugsComponentsRowChangeEvent" msprop:Generator_TablePropName="DrugsComponents" msprop:Generator_RowChangedName="DrugsComponentsRowChanged" msprop:Generator_UserTableName="DrugsComponents" msprop:Generator_RowChangingName="DrugsComponentsRowChanging" msprop:Generator_RowClassName="DrugsComponentsRow" msprop:Generator_TableClassName="DrugsComponentsDataTable" msprop:Generator_TableVarName="tableDrugsComponents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idDrugsComponents" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idDrugsComponentsColumn" msprop:Generator_ColumnPropNameInRow="idDrugsComponents" msprop:Generator_UserColumnName="idDrugsComponents" msprop:Generator_ColumnVarNameInTable="columnidDrugsComponents" type="xs:int" />
              <xs:element name="idDrugs" msprop:Generator_ColumnPropNameInTable="idDrugsColumn" msprop:Generator_ColumnPropNameInRow="idDrugs" msprop:Generator_UserColumnName="idDrugs" msprop:Generator_ColumnVarNameInTable="columnidDrugs" type="xs:int" />
              <xs:element name="idIngredient" msprop:Generator_ColumnPropNameInTable="idIngredientColumn" msprop:Generator_ColumnPropNameInRow="idIngredient" msprop:Generator_UserColumnName="idIngredient" msprop:Generator_ColumnVarNameInTable="columnidIngredient" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DrugsList" msprop:Generator_RowEvHandlerName="DrugsListRowChangeEventHandler" msprop:Generator_RowDeletedName="DrugsListRowDeleted" msprop:Generator_RowDeletingName="DrugsListRowDeleting" msprop:Generator_RowEvArgName="DrugsListRowChangeEvent" msprop:Generator_TablePropName="DrugsList" msprop:Generator_RowChangedName="DrugsListRowChanged" msprop:Generator_UserTableName="DrugsList" msprop:Generator_RowChangingName="DrugsListRowChanging" msprop:Generator_RowClassName="DrugsListRow" msprop:Generator_TableClassName="DrugsListDataTable" msprop:Generator_TableVarName="tableDrugsList">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idDrugsList" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idDrugsListColumn" msprop:Generator_ColumnPropNameInRow="idDrugsList" msprop:Generator_UserColumnName="idDrugsList" msprop:Generator_ColumnVarNameInTable="columnidDrugsList" type="xs:int" />
              <xs:element name="idDiagnosis" msprop:Generator_ColumnPropNameInTable="idDiagnosisColumn" msprop:Generator_ColumnPropNameInRow="idDiagnosis" msprop:Generator_UserColumnName="idDiagnosis" msprop:Generator_ColumnVarNameInTable="columnidDiagnosis" type="xs:int" />
              <xs:element name="idDrugs" msprop:Generator_ColumnPropNameInTable="idDrugsColumn" msprop:Generator_ColumnPropNameInRow="idDrugs" msprop:Generator_UserColumnName="idDrugs" msprop:Generator_ColumnVarNameInTable="columnidDrugs" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="History" msprop:Generator_RowEvHandlerName="HistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="HistoryRowDeleted" msprop:Generator_RowDeletingName="HistoryRowDeleting" msprop:Generator_RowEvArgName="HistoryRowChangeEvent" msprop:Generator_TablePropName="History" msprop:Generator_RowChangedName="HistoryRowChanged" msprop:Generator_UserTableName="History" msprop:Generator_RowChangingName="HistoryRowChanging" msprop:Generator_RowClassName="HistoryRow" msprop:Generator_TableClassName="HistoryDataTable" msprop:Generator_TableVarName="tableHistory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idHisrory" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idHisroryColumn" msprop:Generator_ColumnPropNameInRow="idHisrory" msprop:Generator_UserColumnName="idHisrory" msprop:Generator_ColumnVarNameInTable="columnidHisrory" type="xs:int" />
              <xs:element name="idPatient" msprop:Generator_ColumnPropNameInTable="idPatientColumn" msprop:Generator_ColumnPropNameInRow="idPatient" msprop:Generator_UserColumnName="idPatient" msprop:Generator_ColumnVarNameInTable="columnidPatient" type="xs:int" />
              <xs:element name="idDiagnosis" msprop:Generator_ColumnPropNameInTable="idDiagnosisColumn" msprop:Generator_ColumnPropNameInRow="idDiagnosis" msprop:Generator_UserColumnName="idDiagnosis" msprop:Generator_ColumnVarNameInTable="columnidDiagnosis" type="xs:int" />
              <xs:element name="idDoctor" msprop:Generator_ColumnPropNameInTable="idDoctorColumn" msprop:Generator_ColumnPropNameInRow="idDoctor" msprop:Generator_UserColumnName="idDoctor" msprop:Generator_ColumnVarNameInTable="columnidDoctor" type="xs:int" />
              <xs:element name="DateStart" msprop:Generator_ColumnPropNameInTable="DateStartColumn" msprop:Generator_ColumnPropNameInRow="DateStart" msprop:Generator_UserColumnName="DateStart" msprop:Generator_ColumnVarNameInTable="columnDateStart" type="xs:dateTime" />
              <xs:element name="DateEnd" msprop:Generator_ColumnPropNameInTable="DateEndColumn" msprop:Generator_ColumnPropNameInRow="DateEnd" msprop:Generator_UserColumnName="DateEnd" msprop:Generator_ColumnVarNameInTable="columnDateEnd" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Rating" msprop:Generator_ColumnPropNameInTable="RatingColumn" msprop:Generator_ColumnPropNameInRow="Rating" msprop:Generator_UserColumnName="Rating" msprop:Generator_ColumnVarNameInTable="columnRating" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ingredients" msprop:Generator_RowEvHandlerName="IngredientsRowChangeEventHandler" msprop:Generator_RowDeletedName="IngredientsRowDeleted" msprop:Generator_RowDeletingName="IngredientsRowDeleting" msprop:Generator_RowEvArgName="IngredientsRowChangeEvent" msprop:Generator_TablePropName="Ingredients" msprop:Generator_RowChangedName="IngredientsRowChanged" msprop:Generator_UserTableName="Ingredients" msprop:Generator_RowChangingName="IngredientsRowChanging" msprop:Generator_RowClassName="IngredientsRow" msprop:Generator_TableClassName="IngredientsDataTable" msprop:Generator_TableVarName="tableIngredients">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idIngredient" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idIngredientColumn" msprop:Generator_ColumnPropNameInRow="idIngredient" msprop:Generator_UserColumnName="idIngredient" msprop:Generator_ColumnVarNameInTable="columnidIngredient" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnVarNameInTable="columnName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Patients" msprop:Generator_RowEvHandlerName="PatientsRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientsRowDeleted" msprop:Generator_RowDeletingName="PatientsRowDeleting" msprop:Generator_RowEvArgName="PatientsRowChangeEvent" msprop:Generator_TablePropName="Patients" msprop:Generator_RowChangedName="PatientsRowChanged" msprop:Generator_UserTableName="Patients" msprop:Generator_RowChangingName="PatientsRowChanging" msprop:Generator_RowClassName="PatientsRow" msprop:Generator_TableClassName="PatientsDataTable" msprop:Generator_TableVarName="tablePatients">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idPatient" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idPatientColumn" msprop:Generator_ColumnPropNameInRow="idPatient" msprop:Generator_UserColumnName="idPatient" msprop:Generator_ColumnVarNameInTable="columnidPatient" type="xs:int" />
              <xs:element name="idPerson" msprop:Generator_ColumnPropNameInTable="idPersonColumn" msprop:Generator_ColumnPropNameInRow="idPerson" msprop:Generator_UserColumnName="idPerson" msprop:Generator_ColumnVarNameInTable="columnidPerson" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Persons" msprop:Generator_RowEvHandlerName="PersonsRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonsRowDeleted" msprop:Generator_RowDeletingName="PersonsRowDeleting" msprop:Generator_RowEvArgName="PersonsRowChangeEvent" msprop:Generator_TablePropName="Persons" msprop:Generator_RowChangedName="PersonsRowChanged" msprop:Generator_UserTableName="Persons" msprop:Generator_RowChangingName="PersonsRowChanging" msprop:Generator_RowClassName="PersonsRow" msprop:Generator_TableClassName="PersonsDataTable" msprop:Generator_TableVarName="tablePersons">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idPerson" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idPersonColumn" msprop:Generator_ColumnPropNameInRow="idPerson" msprop:Generator_UserColumnName="idPerson" msprop:Generator_ColumnVarNameInTable="columnidPerson" type="xs:int" />
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_UserColumnName="LastName" msprop:Generator_ColumnVarNameInTable="columnLastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_UserColumnName="FirstName" msprop:Generator_ColumnVarNameInTable="columnFirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MiddleName" msprop:Generator_ColumnPropNameInTable="MiddleNameColumn" msprop:Generator_ColumnPropNameInRow="MiddleName" msprop:Generator_UserColumnName="MiddleName" msprop:Generator_ColumnVarNameInTable="columnMiddleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_UserColumnName="Address" msprop:Generator_ColumnVarNameInTable="columnAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpecialAccount" msprop:Generator_RowEvHandlerName="SpecialAccountRowChangeEventHandler" msprop:Generator_RowDeletedName="SpecialAccountRowDeleted" msprop:Generator_RowDeletingName="SpecialAccountRowDeleting" msprop:Generator_RowEvArgName="SpecialAccountRowChangeEvent" msprop:Generator_TablePropName="SpecialAccount" msprop:Generator_RowChangedName="SpecialAccountRowChanged" msprop:Generator_UserTableName="SpecialAccount" msprop:Generator_RowChangingName="SpecialAccountRowChanging" msprop:Generator_RowClassName="SpecialAccountRow" msprop:Generator_TableClassName="SpecialAccountDataTable" msprop:Generator_TableVarName="tableSpecialAccount">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idSpecialAccount" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idSpecialAccountColumn" msprop:Generator_ColumnPropNameInRow="idSpecialAccount" msprop:Generator_UserColumnName="idSpecialAccount" msprop:Generator_ColumnVarNameInTable="columnidSpecialAccount" type="xs:int" />
              <xs:element name="idPatient" msprop:Generator_ColumnPropNameInTable="idPatientColumn" msprop:Generator_ColumnPropNameInRow="idPatient" msprop:Generator_UserColumnName="idPatient" msprop:Generator_ColumnVarNameInTable="columnidPatient" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Specialization" msprop:Generator_RowEvHandlerName="SpecializationRowChangeEventHandler" msprop:Generator_RowDeletedName="SpecializationRowDeleted" msprop:Generator_RowDeletingName="SpecializationRowDeleting" msprop:Generator_RowEvArgName="SpecializationRowChangeEvent" msprop:Generator_TablePropName="Specialization" msprop:Generator_RowChangedName="SpecializationRowChanged" msprop:Generator_UserTableName="Specialization" msprop:Generator_RowChangingName="SpecializationRowChanging" msprop:Generator_RowClassName="SpecializationRow" msprop:Generator_TableClassName="SpecializationDataTable" msprop:Generator_TableVarName="tableSpecialization">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idSpecialization" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="idSpecializationColumn" msprop:Generator_ColumnPropNameInRow="idSpecialization" msprop:Generator_UserColumnName="idSpecialization" msprop:Generator_ColumnVarNameInTable="columnidSpecialization" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnVarNameInTable="columnName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BadDrugs" />
      <xs:field xpath="mstns:idBadDrugs" />
    </xs:unique>
    <xs:unique name="Diagnoses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Diagnoses" />
      <xs:field xpath="mstns:idDiagnosis" />
    </xs:unique>
    <xs:unique name="Doctors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Doctors" />
      <xs:field xpath="mstns:idDoctor" />
    </xs:unique>
    <xs:unique name="Drugs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Drugs" />
      <xs:field xpath="mstns:idDrugs" />
    </xs:unique>
    <xs:unique name="DrugsComponents_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DrugsComponents" />
      <xs:field xpath="mstns:idDrugsComponents" />
    </xs:unique>
    <xs:unique name="DrugsList_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DrugsList" />
      <xs:field xpath="mstns:idDrugsList" />
    </xs:unique>
    <xs:unique name="History_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:History" />
      <xs:field xpath="mstns:idHisrory" />
    </xs:unique>
    <xs:unique name="Ingredients_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ingredients" />
      <xs:field xpath="mstns:idIngredient" />
    </xs:unique>
    <xs:unique name="Patients_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Patients" />
      <xs:field xpath="mstns:idPatient" />
    </xs:unique>
    <xs:unique name="Persons_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Persons" />
      <xs:field xpath="mstns:idPerson" />
    </xs:unique>
    <xs:unique name="SpecialAccount_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SpecialAccount" />
      <xs:field xpath="mstns:idSpecialAccount" />
    </xs:unique>
    <xs:unique name="Specialization_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Specialization" />
      <xs:field xpath="mstns:idSpecialization" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_BadDrugs_Ingredients" msdata:parent="Ingredients" msdata:child="BadDrugs" msdata:parentkey="idIngredient" msdata:childkey="idIngredient" msprop:Generator_UserParentTable="Ingredients" msprop:Generator_UserChildTable="BadDrugs" msprop:Generator_RelationVarName="relationFK_BadDrugs_Ingredients" msprop:Generator_ChildPropName="GetBadDrugsRows" msprop:Generator_UserRelationName="FK_BadDrugs_Ingredients" msprop:Generator_ParentPropName="IngredientsRow" />
      <msdata:Relationship name="FK_BadDrugs_Patients" msdata:parent="Patients" msdata:child="BadDrugs" msdata:parentkey="idPatient" msdata:childkey="idPatient" msprop:Generator_UserParentTable="Patients" msprop:Generator_UserChildTable="BadDrugs" msprop:Generator_RelationVarName="relationFK_BadDrugs_Patients" msprop:Generator_ChildPropName="GetBadDrugsRows" msprop:Generator_UserRelationName="FK_BadDrugs_Patients" msprop:Generator_ParentPropName="PatientsRow" />
      <msdata:Relationship name="FK_Doctors_Persons" msdata:parent="Persons" msdata:child="Doctors" msdata:parentkey="idPerson" msdata:childkey="idPerson" msprop:Generator_UserParentTable="Persons" msprop:Generator_UserChildTable="Doctors" msprop:Generator_RelationVarName="relationFK_Doctors_Persons" msprop:Generator_ChildPropName="GetDoctorsRows" msprop:Generator_UserRelationName="FK_Doctors_Persons" msprop:Generator_ParentPropName="PersonsRow" />
      <msdata:Relationship name="FK_Doctors_Specialization" msdata:parent="Specialization" msdata:child="Doctors" msdata:parentkey="idSpecialization" msdata:childkey="idSpecialization" msprop:Generator_UserParentTable="Specialization" msprop:Generator_UserChildTable="Doctors" msprop:Generator_RelationVarName="relationFK_Doctors_Specialization" msprop:Generator_ChildPropName="GetDoctorsRows" msprop:Generator_UserRelationName="FK_Doctors_Specialization" msprop:Generator_ParentPropName="SpecializationRow" />
      <msdata:Relationship name="FK_DrugsComponents_Drugs" msdata:parent="Drugs" msdata:child="DrugsComponents" msdata:parentkey="idDrugs" msdata:childkey="idDrugs" msprop:Generator_UserParentTable="Drugs" msprop:Generator_UserChildTable="DrugsComponents" msprop:Generator_RelationVarName="relationFK_DrugsComponents_Drugs" msprop:Generator_ChildPropName="GetDrugsComponentsRows" msprop:Generator_ParentPropName="DrugsRow" msprop:Generator_UserRelationName="FK_DrugsComponents_Drugs" />
      <msdata:Relationship name="FK_DrugsComponents_Ingredients" msdata:parent="Ingredients" msdata:child="DrugsComponents" msdata:parentkey="idIngredient" msdata:childkey="idIngredient" msprop:Generator_UserParentTable="Ingredients" msprop:Generator_UserChildTable="DrugsComponents" msprop:Generator_RelationVarName="relationFK_DrugsComponents_Ingredients" msprop:Generator_ChildPropName="GetDrugsComponentsRows" msprop:Generator_UserRelationName="FK_DrugsComponents_Ingredients" msprop:Generator_ParentPropName="IngredientsRow" />
      <msdata:Relationship name="FK_DrugsList_Diagnoses" msdata:parent="Diagnoses" msdata:child="DrugsList" msdata:parentkey="idDiagnosis" msdata:childkey="idDiagnosis" msprop:Generator_UserParentTable="Diagnoses" msprop:Generator_UserChildTable="DrugsList" msprop:Generator_RelationVarName="relationFK_DrugsList_Diagnoses" msprop:Generator_ChildPropName="GetDrugsListRows" msprop:Generator_ParentPropName="DiagnosesRow" msprop:Generator_UserRelationName="FK_DrugsList_Diagnoses" />
      <msdata:Relationship name="FK_DrugsList_Drugs" msdata:parent="Drugs" msdata:child="DrugsList" msdata:parentkey="idDrugs" msdata:childkey="idDrugs" msprop:Generator_UserParentTable="Drugs" msprop:Generator_UserChildTable="DrugsList" msprop:Generator_RelationVarName="relationFK_DrugsList_Drugs" msprop:Generator_ChildPropName="GetDrugsListRows" msprop:Generator_ParentPropName="DrugsRow" msprop:Generator_UserRelationName="FK_DrugsList_Drugs" />
      <msdata:Relationship name="FK_History_Diagnoses" msdata:parent="Diagnoses" msdata:child="History" msdata:parentkey="idDiagnosis" msdata:childkey="idDiagnosis" msprop:Generator_UserParentTable="Diagnoses" msprop:Generator_UserChildTable="History" msprop:Generator_RelationVarName="relationFK_History_Diagnoses" msprop:Generator_ChildPropName="GetHistoryRows" msprop:Generator_ParentPropName="DiagnosesRow" msprop:Generator_UserRelationName="FK_History_Diagnoses" />
      <msdata:Relationship name="FK_History_Doctors" msdata:parent="Doctors" msdata:child="History" msdata:parentkey="idDoctor" msdata:childkey="idDoctor" msprop:Generator_UserParentTable="Doctors" msprop:Generator_UserChildTable="History" msprop:Generator_RelationVarName="relationFK_History_Doctors" msprop:Generator_ChildPropName="GetHistoryRows" msprop:Generator_ParentPropName="DoctorsRow" msprop:Generator_UserRelationName="FK_History_Doctors" />
      <msdata:Relationship name="FK_History_Patients" msdata:parent="Patients" msdata:child="History" msdata:parentkey="idPatient" msdata:childkey="idPatient" msprop:Generator_UserParentTable="Patients" msprop:Generator_UserChildTable="History" msprop:Generator_RelationVarName="relationFK_History_Patients" msprop:Generator_ChildPropName="GetHistoryRows" msprop:Generator_UserRelationName="FK_History_Patients" msprop:Generator_ParentPropName="PatientsRow" />
      <msdata:Relationship name="FK_Patients_Persons" msdata:parent="Persons" msdata:child="Patients" msdata:parentkey="idPerson" msdata:childkey="idPerson" msprop:Generator_UserParentTable="Persons" msprop:Generator_UserChildTable="Patients" msprop:Generator_RelationVarName="relationFK_Patients_Persons" msprop:Generator_ChildPropName="GetPatientsRows" msprop:Generator_UserRelationName="FK_Patients_Persons" msprop:Generator_ParentPropName="PersonsRow" />
      <msdata:Relationship name="FK_SpecialAccount_Patients" msdata:parent="Patients" msdata:child="SpecialAccount" msdata:parentkey="idPatient" msdata:childkey="idPatient" msprop:Generator_UserParentTable="Patients" msprop:Generator_UserChildTable="SpecialAccount" msprop:Generator_RelationVarName="relationFK_SpecialAccount_Patients" msprop:Generator_ChildPropName="GetSpecialAccountRows" msprop:Generator_ParentPropName="PatientsRow" msprop:Generator_UserRelationName="FK_SpecialAccount_Patients" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>